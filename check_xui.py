#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ 3xUI
"""

import asyncio
from xui_client import XUIClient

async def check_xui_clients():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ 3xUI"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ 3xUI...")
    
    xui_client = XUIClient()
    try:
        sync_result = await xui_client.sync_subscriptions()
        
        if sync_result.get("success"):
            active_clients = sync_result.get("active_clients", [])
            print(f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ 3xUI: {len(active_clients)}")
            
            for i, client in enumerate(active_clients, 1):
                print(f"\nüìã –ö–ª–∏–µ–Ω—Ç {i}:")
                print(f"   Email: {client.get('email', 'N/A')}")
                print(f"   ID: {client.get('id', 'N/A')}")
                print(f"   SubId: {client.get('subId', 'N/A')}")
                print(f"   Inbound ID: {client.get('inbound_id', 'N/A')}")
                print(f"   Inbound Port: {client.get('inbound_port', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ 3xUI: {sync_result.get('msg', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ 3xUI: {e}")
    finally:
        await xui_client.close()

if __name__ == "__main__":
    asyncio.run(check_xui_clients())

