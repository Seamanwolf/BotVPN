#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ –∫–ª—é—á–µ–π –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–¥–ø–∏—Å–∫–∞–º
"""

import os
import sys
from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker
from config import DATABASE_URL

def add_key_numbers():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–º–µ—Ä–∞ –∫–ª—é—á–µ–π –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–¥–ø–∏—Å–∫–∞–º"""
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    engine = create_engine(DATABASE_URL)
    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—è key_number...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª–µ key_number
    with engine.connect() as conn:
        result = conn.execute(text("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'subscriptions' AND column_name = 'key_number'
        """))
        
        if result.fetchone():
            print("‚úÖ –ü–æ–ª–µ key_number —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print("üîß –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ key_number...")
            conn.execute(text("ALTER TABLE subscriptions ADD COLUMN key_number INTEGER"))
            conn.commit()
            print("‚úÖ –ü–æ–ª–µ key_number —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
    
    print("üîß –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–æ–º–µ—Ä–∞ –∫–ª—é—á–µ–π –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
    with engine.connect() as conn:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è
        result = conn.execute(text("""
            SELECT DISTINCT user_id 
            FROM subscriptions 
            ORDER BY user_id
        """))
        
        user_ids = [row[0] for row in result.fetchall()]
        
        for user_id in user_ids:
            print(f"üë§ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}...")
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è
            result = conn.execute(text("""
                SELECT id, created_at 
                FROM subscriptions 
                WHERE user_id = :user_id 
                ORDER BY created_at ASC
            """), {"user_id": user_id})
            
            subscriptions = result.fetchall()
            
            # –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–æ–º–µ—Ä–∞ –∫–ª—é—á–µ–π
            for i, (sub_id, created_at) in enumerate(subscriptions, 1):
                conn.execute(text("""
                    UPDATE subscriptions 
                    SET key_number = :key_number 
                    WHERE id = :sub_id
                """), {"key_number": i, "sub_id": sub_id})
                
                print(f"  üìù –ü–æ–¥–ø–∏—Å–∫–∞ {sub_id} -> –ö–ª—é—á #{i}")
            
            conn.commit()
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}: –Ω–∞–∑–Ω–∞—á–µ–Ω–æ {len(subscriptions)} –∫–ª—é—á–µ–π")
    
    print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    with engine.connect() as conn:
        result = conn.execute(text("""
            SELECT 
                COUNT(*) as total_subscriptions,
                COUNT(DISTINCT user_id) as total_users,
                AVG(key_number) as avg_keys_per_user
            FROM subscriptions
        """))
        
        stats = result.fetchone()
        print(f"‚Ä¢ –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫: {stats[0]}")
        print(f"‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats[1]}")
        print(f"‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {stats[2]:.1f}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ –∫–ª—é—á–µ–π...")
    add_key_numbers()
