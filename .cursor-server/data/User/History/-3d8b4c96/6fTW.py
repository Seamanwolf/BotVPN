#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –ø–æ–¥–ø–∏—Å–æ–∫
"""

from database import SessionLocal, User, Subscription
from datetime import datetime
import asyncio
from xui_client import XUIClient

async def cleanup_subscriptions():
    """–û—á–∏—Å—Ç–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –ø–æ–¥–ø–∏—Å–æ–∫"""
    print("üßπ –û—á–∏—â–∞–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –ø–æ–¥–ø–∏—Å–∫–∏...")
    
    # –°–Ω–∞—á–∞–ª–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å 3xUI
    xui_client = XUIClient()
    try:
        sync_result = await xui_client.sync_subscriptions()
        if sync_result.get("success"):
            active_clients = sync_result.get("active_clients", [])
            active_emails = [client["email"] for client in active_clients]
            print(f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ 3xUI: {len(active_clients)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å 3xUI: {sync_result.get('msg', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            return
    finally:
        await xui_client.close()
    
    db = SessionLocal()
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = db.query(User).all()
        
        for user in users:
            user_email = user.email if user.email else f"user_{user.telegram_id}@vpn.local"
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            subscriptions = db.query(Subscription).filter(Subscription.user_id == user.id).all()
            
            if len(subscriptions) > 1:
                print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.telegram_id} ({user.full_name}):")
                print(f"   Email: {user_email}")
                print(f"   –ü–æ–¥–ø–∏—Å–æ–∫ –≤ –ë–î: {len(subscriptions)}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ 3xUI
                if user_email in active_emails:
                    print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–µ–Ω –≤ 3xUI")
                    
                    # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å–∞–º—É—é –Ω–æ–≤—É—é –∞–∫—Ç–∏–≤–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É
                    active_subscriptions = [s for s in subscriptions if s.status == "active"]
                    if active_subscriptions:
                        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è, –æ—Å—Ç–∞–≤–ª—è–µ–º —Å–∞–º—É—é –Ω–æ–≤—É—é
                        active_subscriptions.sort(key=lambda x: x.created_at, reverse=True)
                        keep_subscription = active_subscriptions[0]
                        
                        print(f"   üîÑ –û—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É ID: {keep_subscription.id} (—Å–æ–∑–¥–∞–Ω–∞: {keep_subscription.created_at})")
                        
                        # –£–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏
                        for sub in active_subscriptions[1:]:
                            print(f"   üóëÔ∏è –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â—É—é—Å—è –ø–æ–¥–ø–∏—Å–∫—É ID: {sub.id}")
                            db.delete(sub)
                        
                        # –ü–æ–º–µ—á–∞–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∫–∞–∫ –∏—Å—Ç–µ–∫—à–∏–µ
                        for sub in subscriptions:
                            if sub.status == "active" and sub.id != keep_subscription.id:
                                sub.status = "expired"
                                print(f"   ‚è∞ –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∏—Å—Ç–µ–∫—à—É—é –ø–æ–¥–ø–∏—Å–∫—É ID: {sub.id}")
                    else:
                        print(f"   ‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫")
                else:
                    print(f"   ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ 3xUI")
                    # –ü–æ–º–µ—á–∞–µ–º –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∫–∞–∫ –∏—Å—Ç–µ–∫—à–∏–µ
                    for sub in subscriptions:
                        if sub.status == "active":
                            sub.status = "expired"
                            print(f"   ‚è∞ –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∏—Å—Ç–µ–∫—à—É—é –ø–æ–¥–ø–∏—Å–∫—É ID: {sub.id}")
        
        db.commit()
        print(f"\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    asyncio.run(cleanup_subscriptions())

