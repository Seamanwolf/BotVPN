#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫ —Å 3xUI
"""

import asyncio
from database import SessionLocal, User, Subscription
from xui_client import XUIClient
from datetime import datetime

async def sync_all_subscriptions():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫"""
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –ø–æ–¥–ø–∏—Å–æ–∫...")
    
    db = SessionLocal()
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏
        all_subscriptions = db.query(Subscription).all()
        print(f"üìä –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫ –≤ –ë–î: {len(all_subscriptions)}")
        
        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å 3xUI
        xui_client = XUIClient()
        sync_result = await xui_client.sync_subscriptions()
        
        if sync_result.get("success"):
            active_clients = sync_result.get("active_clients", [])
            active_emails = [client["email"] for client in active_clients]
            
            print(f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ 3xUI: {len(active_clients)}")
            print(f"üìß –ê–∫—Ç–∏–≤–Ω—ã–µ email –≤ 3xUI: {active_emails}")
            
            updated_count = 0
            
            for subscription in all_subscriptions:
                user = db.query(User).filter(User.id == subscription.user_id).first()
                if user:
                    user_email = user.email if user.email else f"user_{user.telegram_id}@vpn.local"
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
                    if subscription.status == "active":
                        if user_email not in active_emails:
                            # –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω–∞—è, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ 3xUI
                            subscription.status = "expired"
                            print(f"‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.telegram_id} ({user_email}) –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –∏—Å—Ç–µ–∫—à–∞—è (—É–¥–∞–ª–µ–Ω–∞ –∏–∑ 3xUI)")
                            updated_count += 1
                        elif subscription.expires_at <= datetime.utcnow():
                            # –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
                            subscription.status = "expired"
                            print(f"‚è∞ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.telegram_id} ({user_email}) –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –∏—Å—Ç–µ–∫—à–∞—è (–ø–æ –≤—Ä–µ–º–µ–Ω–∏)")
                            updated_count += 1
                        else:
                            print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.telegram_id} ({user_email}) –∞–∫—Ç–∏–≤–Ω–∞")
                    else:
                        print(f"üìã –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.telegram_id} ({user_email}) —É–∂–µ –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ {subscription.status}")
            
            db.commit()
            print(f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–¥–ø–∏—Å–æ–∫: {updated_count}")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å 3xUI: {sync_result.get('msg', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
        db.rollback()
    finally:
        db.close()
        await xui_client.close()

if __name__ == "__main__":
    asyncio.run(sync_all_subscriptions())
